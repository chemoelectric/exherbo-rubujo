# Copyright 2008 David Leverton <dleverton@exherbo.org>
# Distributed under the terms of the GNU General Public License v2

require pam gnu

SUMMARY="Concurrent Versions System"
DOWNLOADS="mirror://gnu/non-gnu/cvs/source/feature/${PV}/${PNV}.tar.bz2"

# from ${HOMEPAGE}
DESCRIPTION="CVS is a version control system, an important component
of Source Configuration Management (SCM). Using it, you can record the
history of sources files, and documents. It fills a similar role to
the free software RCS, PRCS, and Aegis packages.

CVS is a production quality system in wide use around the world,
including many free software projects.

While CVS stores individual file history in the same format as RCS, it
offers the following significant advantages over RCS:

 * It can run scripts which you can supply to log CVS operations or
   enforce site-specific polices.

 * Client/server CVS enables developers scattered by geography or slow
   modems to function as a single team. The version history is stored
   on a single central server and the client machines have a copy of
   all the files that the developers are working on. Therefore, the
   network between the client and the server must be up to perform CVS
   operations (such as checkins or updates) but need not be up to edit
   or manipulate the current versions of the files. Clients can
   perform all the same operations which are available locally.

 * In cases where several developers or teams want to each maintain
   their own version of the files, because of geography and/or policy,
   CVS's vendor branches can import a version from another team (even
   if they don't use CVS), and then CVS can merge the changes from the
   vendor branch with the latest files if that is what is desired.

 * Unreserved checkouts, allowing more than one developer to work on
   the same files at the same time.

 * CVS provides a flexible modules database that provides a symbolic
   mapping of names to components of a larger software
   distribution. It applies names to collections of directories and
   files. A single command can manipulate the entire collection.

 * CVS servers run on most unix variants, and clients for Windows
   NT/95, OS/2 and VMS are also available. CVS will also operate in
   what is sometimes called server mode against local repositories on
   Windows 95/NT."

LICENCES="GPL-2 FDL-1.1" # COPYING is GPL-1, but most files have GPL-2 headers
SLOT="0"
MYOPTIONS="pam" # XXX kerberos

RESTRICT="test"

DEPENDENCIES="
    build+run:
        dev-lang/perl:*
        sys-libs/zlib
        pam? ( sys-libs/pam )
    suggestion:
        net-misc/openssh [[ description = [ Enables access to repositories over SSH ] ]]"

DEFAULT_SRC_CONFIGURE_PARAMS=(
    --enable-encryption
    --without-krb4 # yuck
    --without-gssapi # XXX
    --with-external-zlib
    --with-rsh=ssh
    --hates=docdir
)
DEFAULT_SRC_CONFIGURE_OPTION_ENABLES=( pam )

cvs_src_test_expensive() {
    addwrite /dev/full
    TMPDIR=${TMPDIR%/} emake -j1 check
}

cvs_src_install() {
    default
    option pam && pamd_mimic_system cvs auth account session
}
DEFAULT_SRC_INSTALL_EXTRA_SUBDIRS=( doc )
DEFAULT_SRC_INSTALL_EXTRA_DOCS=( DEVEL-CVS MINOR-BUGS PROJECTS TESTS doc/{RCSFILES,cvs-paper.{ps,pdf},writeproxy.rtf} )
DEFAULT_SRC_INSTALL_EXCLUDE=( README.VMS )

export_exlib_phases src_test_expensive src_install

