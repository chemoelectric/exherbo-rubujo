Index: aclocal.m4
===================================================================
RCS file: /cvsroot/unicon/unicon/aclocal.m4,v
retrieving revision 1.17
diff -u -r1.17 aclocal.m4
--- aclocal.m4	17 Mar 2010 23:28:41 -0000	1.17
+++ aclocal.m4	20 May 2010 21:18:34 -0000
@@ -131,7 +131,7 @@
 fi], [
 AC_MSG_RESULT(yes)
 FTGL_HOME=/usr/local
-if test ! -f "${FTGL_HOME}/include/FTGL/FTGL.h"
+if test ! -f "${FTGL_HOME}/include/FTGL/ftgl.h"
 then
         FTGL_HOME=/usr
 fi
@@ -155,7 +155,7 @@
     if test "$CXX" = "g++" -a "$GXX" = "yes"
     then
 	AC_CHECK_LIB(ftgl, _ZN6FTFaceD2Ev, [FTGL_cv_libFTGL=yes], [FTGL_cv_libFTGL=no])
-	AC_CHECK_HEADER(FTGL.h, [FTGL_cv_FTGL_h=yes], [FTGL_cv_FTGL_h=no])
+	AC_CHECK_HEADER(ftgl.h, [FTGL_cv_FTGL_h=yes], [FTGL_cv_FTGL_h=no])
         if test "$FTGL_cv_libFTGL" = "yes" -a "$FTGL_cv_FTGL_h" = "yes"
         then
                 #
@@ -968,10 +968,10 @@
 	XFT_OLD_LDFLAGS=$LDFLAGS
 	XFT_OLD_CPPFLAGS=$CPPFLAGS
 	LDFLAGS="$LDFLAGS -L${XFT_HOME}/lib64 -L${XFT_HOME}/lib"
-	CPPFLAGS="$CPPFLAGS -I${XFT_HOME}/include/X11/Xft"
+	CPPFLAGS="$CPPFLAGS -I${XFT_HOME}/include/X11/Xft -I${FREETYPE_HOME}/include/freetype2"
         AC_LANG_SAVE
         AC_LANG_C
-        AC_CHECK_LIB(Xft, XftPatternCreate, [xft_cv_libxft=yes], [xft_cv_libxft=no])
+        AC_CHECK_LIB(Xft, XftFontOpen, [xft_cv_libxft=yes], [xft_cv_libxft=no])
         AC_CHECK_HEADER(Xft.h, [xft_cv_xft_h=yes], [xft_cv_xft_h=no])
         AC_LANG_RESTORE
         if test "$xft_cv_libxft" = "yes" -a "$xft_cv_xft_h" = "yes"
Index: config/unix/Makefile
===================================================================
RCS file: /cvsroot/unicon/unicon/config/unix/Makefile,v
retrieving revision 1.8
diff -u -r1.8 Makefile
--- config/unix/Makefile	11 Jul 2009 01:29:43 -0000	1.8
+++ config/unix/Makefile	20 May 2010 21:18:34 -0000
@@ -27,10 +27,10 @@
 Setup-Graphics:  Setup-Common
 	echo '# Graphics enabled'		>> $(TOP)/Makedefs
 	echo 'XL = -L../../bin -lXpm $$(XLIBS)'	>> $(TOP)/Makedefs
-	echo 'XPM=xpm'				>> $(TOP)/Makedefs
+	echo 'XPM='				>> $(TOP)/Makedefs
 	echo '# Graphics enabled'		>> $(TOP)/Makedefs.in
 	echo 'XL = -L../../bin -lXpm $$(XLIBS)'	>> $(TOP)/Makedefs.in
-	echo 'XPM=xpm'				>> $(TOP)/Makedefs.in
+	echo 'XPM='				>> $(TOP)/Makedefs.in
 	echo '#define Graphics 1'		>> $(SRC)/h/define.h
 
 Setup-Thin: Setup-Common
Index: config/unix/Config/Makefile
===================================================================
RCS file: /cvsroot/unicon/unicon/config/unix/Config/Makefile,v
retrieving revision 1.18
diff -u -r1.18 Makefile
--- config/unix/Config/Makefile	24 Feb 2009 19:36:04 -0000	1.18
+++ config/unix/Config/Makefile	20 May 2010 21:18:34 -0000
@@ -16,17 +16,17 @@
 		echo "#define Graphics 1" >>../../../src/h/define.h
 		-if [ -f xiconc.def ]; \
 		    then cat xiconc.def >> ../../../src/h/define.h; fi
-		echo "XPMLIB=-L../../bin -lXpm" > ../../../src/runtime/Makefile
+		echo "-lXpm" > ../../../src/runtime/Makefile
 		-if [ -f xiconx.mak ]; \
 		    then cat xiconx.mak >> ../../../src/runtime/Makefile; \
 		    else echo "XLIB= -lX11" \
 			>> ../../../src/runtime/Makefile; fi
-		echo "XPM=xpm" >> ../../../src/runtime/Makefile
+		echo "XPM=" >> ../../../src/runtime/Makefile
 		cat runtime.hdr ../Config/runtime.mak \
 		   >> ../../../src/runtime/Makefile
 		cat ../Config/xpm.mak \
 		   > ../../../src/xpm/lib/Makefile
-		echo "XPM=xpm" > ../../../src/iconc/Makefile
+		echo "XPM=" > ../../../src/iconc/Makefile
 		cat iconc.hdr ../Config/iconc.mak \
 		   >> ../../../src/iconc/Makefile
 
@@ -49,8 +49,8 @@
 		   > ../../../src/icont/Makefile
 		cat ../Config/runtime.mak \
 		   > ../../../src/runtime/Makefile
-		cat ../Config/xpm.mak \
-		   > ../../../src/xpm/lib/Makefile
+#		cat ../Config/xpm.mak \
+#		   > ../../../src/xpm/lib/Makefile
 		-mkdir -p ../../../ipl/lib
 		cp unicon.mak ../../../uni/unicon/makefile
 		cp ipllib.mak ../../../ipl/lib/makefile
Index: src/h/sys.h
===================================================================
RCS file: /cvsroot/unicon/unicon/src/h/sys.h,v
retrieving revision 1.31
diff -u -r1.31 sys.h
--- src/h/sys.h	27 Apr 2010 21:58:34 -0000	1.31
+++ src/h/sys.h	20 May 2010 21:18:34 -0000
@@ -225,7 +225,7 @@
       #include "decw$include:Xatom.h"
 
       #ifdef HAVE_LIBXPM
-         #include "../xpm/xpm.h"
+         #include <xpm.h>
       #endif				/* HAVE_LIBXPM */
 
       #undef UNIX
@@ -250,7 +250,7 @@
 #define AMIGA_ZERO
 #undef AMIGA
 #endif					/* !AMIGA */
-         #include "../xpm/xpm.h"
+         #include <xpm.h>
 #ifdef AMIGA_ZERO
 #define AMIGA 0
 #endif					/* !AMIGA */
Index: src/runtime/rxrsc.ri
===================================================================
RCS file: /cvsroot/unicon/unicon/src/runtime/rxrsc.ri,v
retrieving revision 1.23
diff -u -r1.23 rxrsc.ri
--- src/runtime/rxrsc.ri	7 May 2010 06:42:35 -0000	1.23
+++ src/runtime/rxrsc.ri	20 May 2010 21:18:34 -0000
@@ -731,7 +731,7 @@
    static char res[256];
    int flags, size;
    char family[MAXFONTWORD+1];
-   XftPattern *p;
+   FcPattern *p;
 
    if (!strncmp(s, "fc:", 3))
        return s + 3;
@@ -739,65 +739,65 @@
    if (!parsefont(s, family, &flags, &size))
        return s;
 
-    p = XftPatternCreate();
+    p = FcPatternCreate();
 
    /*
     * Check first for special "standard" family names.
     */
    if (!strcmp(family, "fixed")) {
-       XftPatternAddString(p, XFT_FAMILY, "Unicon fixed");
-       XftPatternAddString(p, XFT_FAMILY, "fixed");
+       FcPatternAddString(p, XFT_FAMILY, "Unicon fixed");
+       FcPatternAddString(p, XFT_FAMILY, "fixed");
        flags |= FONTFLAG_MONO;
    }
    else if (!strcmp(family, "mono")) {
-       XftPatternAddString(p, XFT_FAMILY, "Unicon mono");
-       XftPatternAddString(p, XFT_FAMILY, "lucidatypewriter");
+       FcPatternAddString(p, XFT_FAMILY, "Unicon mono");
+       FcPatternAddString(p, XFT_FAMILY, "lucidatypewriter");
        flags |= FONTFLAG_MONO;
    }
    else if (!strcmp(family, "typewriter")) {
-       XftPatternAddString(p, XFT_FAMILY, "Unicon typewriter");
-       XftPatternAddString(p, XFT_FAMILY, "courier");
+       FcPatternAddString(p, XFT_FAMILY, "Unicon typewriter");
+       FcPatternAddString(p, XFT_FAMILY, "courier");
        flags |= FONTFLAG_MONO;
    }
    else if (!strcmp(family, "sans")) {
-       XftPatternAddString(p, XFT_FAMILY, "Unicon sans");
-       XftPatternAddString(p, XFT_FAMILY, "helvetica");
+       FcPatternAddString(p, XFT_FAMILY, "Unicon sans");
+       FcPatternAddString(p, XFT_FAMILY, "helvetica");
        flags |= FONTFLAG_PROPORTIONAL;
    }
    else if (!strcmp(family, "serif")) {
-       XftPatternAddString(p, XFT_FAMILY, "Unicon serif");
-       XftPatternAddString(p, XFT_FAMILY, "times");
+       FcPatternAddString(p, XFT_FAMILY, "Unicon serif");
+       FcPatternAddString(p, XFT_FAMILY, "times");
        flags |= FONTFLAG_PROPORTIONAL;
    }
    else
-       XftPatternAddString(p, XFT_FAMILY, family);
+       FcPatternAddString(p, XFT_FAMILY, family);
 
    if (size > 0)
-       XftPatternAddDouble(p, XFT_SIZE, (double)size);
+       FcPatternAddDouble(p, XFT_SIZE, (double)size);
 
     if (flags & FONTFLAG_MEDIUM)
-        XftPatternAddInteger(p, XFT_WEIGHT, XFT_WEIGHT_MEDIUM);
+        FcPatternAddInteger(p, XFT_WEIGHT, XFT_WEIGHT_MEDIUM);
     else if ((flags & FONTFLAG_DEMI) && (flags & FONTFLAG_BOLD))
-        XftPatternAddInteger(p, XFT_WEIGHT, XFT_WEIGHT_DEMIBOLD);
+        FcPatternAddInteger(p, XFT_WEIGHT, XFT_WEIGHT_DEMIBOLD);
     else if (flags & FONTFLAG_BOLD)
-        XftPatternAddInteger(p, XFT_WEIGHT, XFT_WEIGHT_BOLD);
+        FcPatternAddInteger(p, XFT_WEIGHT, XFT_WEIGHT_BOLD);
     else if (flags & FONTFLAG_LIGHT)
-        XftPatternAddInteger(p, XFT_WEIGHT, XFT_WEIGHT_LIGHT);
+        FcPatternAddInteger(p, XFT_WEIGHT, XFT_WEIGHT_LIGHT);
 
     if (flags & FONTFLAG_ITALIC)
-        XftPatternAddInteger(p, XFT_SLANT, XFT_SLANT_ITALIC);
+        FcPatternAddInteger(p, XFT_SLANT, XFT_SLANT_ITALIC);
     else if (flags & FONTFLAG_OBLIQUE)
-        XftPatternAddInteger(p, XFT_SLANT, XFT_SLANT_OBLIQUE);
+        FcPatternAddInteger(p, XFT_SLANT, XFT_SLANT_OBLIQUE);
     else if (flags & FONTFLAG_ROMAN)
-        XftPatternAddInteger(p, XFT_SLANT, XFT_SLANT_ROMAN);
+        FcPatternAddInteger(p, XFT_SLANT, XFT_SLANT_ROMAN);
 
    if (flags & FONTFLAG_PROPORTIONAL)
-        XftPatternAddInteger(p, XFT_SPACING, XFT_PROPORTIONAL);
+        FcPatternAddInteger(p, XFT_SPACING, XFT_PROPORTIONAL);
    if (flags & FONTFLAG_MONO)
-        XftPatternAddInteger(p, XFT_SPACING, XFT_MONO);
+        FcPatternAddInteger(p, XFT_SPACING, XFT_MONO);
 
    XftNameUnparse(p, res, sizeof(res) - 1);
-   XftPatternDestroy(p);
+   FcPatternDestroy(p);
 
    return res;
 }
