#!/bin/bash
# Copyright Â© 2010 Saleem Abdulrasool <compnerd@compnerd.org>

is_mounted()
{
   awk 'BEGIN { rc=1 } $1 !~ /^#/ { if ($2 == "'${1}'") { rc=0 } } END { exit rc }' /proc/mounts
}

mount_devfs()
{
   is_mounted /dev && return 0
   mount -n /dev && return 0
   mount -n -t $(grep -qs devtmpfs /procfilesystems && echo devtmpfs || echo tmpfs) -o 'exec,nosuid,mode=0755,size=10M' udev /dev
}

create_static_dev_nodes()
{
   # create /dev/console, /dev/tty1, and /dev/tty to be able to write to the
   # console without bootsplash and before udevd is up
   [[ -c /dev/console ]] || mknod -m 600 /dev/console c 5 1
   [[ -c /dev/tty1 ]]    || mknod -m 620 /dev/tty1    c 4 1
   [[ -c /dev/tty ]]     || mknod -m 666 /dev/tty     c 5 0

   # uded will dup(2) stdin, stdout, stderr to /dev/null and we do not want a
   # file which gets buffered in RAM
   [[ -c /dev/null ]]    || mknod -m 666 /dev/null    c 1 3

   # /dev/kmsg is needed to allow udevd can log messages to the kernel message
   # buffer (dmesg)
   [[ -c /dev/kmsg ]]    || mknod -m 660 /dev/kmsg    c 1 11

   # copy over persistent devices that are created by udev
   [[ -d /@@libdir@@/udev/devices ]] && cp -RPp /@@libdir@@/udev/devices/* /dev 2>/dev/null

   # not created by sysfs, but required
   ln -snf /proc/self/fd /dev/fd
   ln -snf fd/0 /dev/stdin
   ln -snf fd/1 /dev/stdout
   ln -snf fd/2 /dev/stderr

   [[ -e /proc/kcore ]] && ln -snf /proc/kcore /dev/core

   mkdir -p /dev/pts /dev/shm
}

write_root_symlink_rule()
{
   eval $(udevadm info --export --export-prefix=ROOT_ --device-id-of-file=/)

   [[ ${ROOT_MAJOR} -gt 0 ]] || return

   mkdir -m 0755 -p /dev/.udev/rules.d

   # XXX for some reason, using a heredoc fails, so lets go with echo
   echo "# autogenerated by ${0}" > /dev/.udev/rules.d/10-root-symlink.rules
   echo 'ACTION=="add|change", SUBSYSTEM=="block", ENV{MAJOR}=="${ROOT_MAJOR}", ENV{MINOR}=="${ROOT_MINOR}", SYMLINK+="root"' >> /dev/.udev/rules.d/10-root-symlink.rules
}

start_udevd()
{
   # load unix domain sockets if built as a module
   [[ -e /proc/modules ]] && modprobe -q unix 2>/dev/null
   start-stop-daemon --start --exec /sbin/udevd -- --daemon
}

process_uevents()
{
   /sbin/udevadm trigger '--type=subsystems' '--action=add'
   /sbin/udevadm trigger '--type=devices' '--action=add'
   /sbin/udevadm settle '--timeout=60'
}

main()
{
   ebegin "Mounting devfs at /dev"
   mount_devfs
   eend $?

   create_static_dev_nodes

   # create a file so that our rc system knows it is still in sysinit
   # existance means init scripts will not directly run.  rc will remove the
   # file when done with sysinit.
   touch /dev/.rcsysinit

   write_root_symlink_rule

   start_udevd
   process_uevents
}

main

